openapi: 3.0.3
info:
  title: API Carnet de Contacts
  version: 1.0.0
  description: API permettant la gestion des utilisateurs et de leurs contacts (authentification JWT)
servers:
  - url: https://file-rouge.onrender.com/api

paths:
  /auth/register:
    post:
      summary: Créer un nouvel utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: test@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Utilisateur créé avec succès
        '400':
          description: Erreur lors de l'inscription

  /auth/login:
    post:
      summary: Connexion utilisateur
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: test@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Connexion réussie (JWT renvoyé)
        '400':
          description: Email ou mot de passe invalide

  /contacts:
    get:
      summary: Récupérer tous les contacts de l’utilisateur connecté
      tags:
        - Contacts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '401':
          description: Non autorisé
    post:
      summary: Ajouter un nouveau contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
      responses:
        '201':
          description: Contact créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Non autorisé

  /contacts/{id}:
    patch:
      summary: Mettre à jour partiellement un contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID du contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
      responses:
        '200':
          description: Contact mis à jour
        '401':
          description: Non autorisé
        '404':
          description: Contact non trouvé
    delete:
      summary: Supprimer un contact
      tags:
        - Contacts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID du contact
      responses:
        '200':
          description: Contact supprimé
        '401':
          description: Non autorisé
        '404':
          description: Contact non trouvé

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Contact:
      type: object
      properties:
        id:
          type: string
          example: 615f1d2e8a1c2b0015b4c123
        firstName:
          type: string
          example: Jean
        name:
          type: string
          example: Dupont
        email:
          type: string
          example: jean.dupont@example.com
        phone:
          type: string
          example: '+33 6 12 34 56 78'
        userId:
          type: string
          description: ID de l’utilisateur propriétaire

    ContactInput:
      type: object
      required:
        - firstName
        - name
        - phone
      properties:
        firstName:
          type: string
          example: Jean
        name:
          type: string
          example: Dupont
        email:
          type: string
          example: jean.dupont@example.com
        phone:
          type: string
          example: '+33 6 12 34 56 78'
